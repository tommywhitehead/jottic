"use client";
'use strict';

var jsxRuntime = require('react/jsx-runtime');
var react = require('react');
var components = require('./components.cjs');
var overrides = require('./overrides.cjs');


const LiveblocksUiConfigContext = react.createContext({});
function useLiveblocksUiConfig() {
  return react.useContext(LiveblocksUiConfigContext);
}
function LiveblocksUiConfig({
  overrides: overrides$1,
  components: components$1,
  portalContainer,
  preventUnsavedComposerChanges = true,
  emojibaseUrl,
  children
}) {
  const liveblocksUiConfig = react.useMemo(
    () => ({
      portalContainer,
      preventUnsavedComposerChanges,
      emojibaseUrl
    }),
    [portalContainer, preventUnsavedComposerChanges, emojibaseUrl]
  );
  return /* @__PURE__ */ jsxRuntime.jsx(LiveblocksUiConfigContext.Provider, {
    value: liveblocksUiConfig,
    children: /* @__PURE__ */ jsxRuntime.jsx(overrides.OverridesProvider, {
      overrides: overrides$1,
      children: /* @__PURE__ */ jsxRuntime.jsx(components.ComponentsProvider, {
        components: components$1,
        children
      })
    })
  });
}

exports.LiveblocksUiConfig = LiveblocksUiConfig;
exports.useLiveblocksUiConfig = useLiveblocksUiConfig;
//# sourceMappingURL=config.cjs.map
