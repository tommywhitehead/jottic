"use client";
import { jsx } from 'react/jsx-runtime';
import { createContext, useContext, useMemo } from 'react';
import { ComponentsProvider } from './components.js';
import { OverridesProvider } from './overrides.js';


const LiveblocksUiConfigContext = createContext({});
function useLiveblocksUiConfig() {
  return useContext(LiveblocksUiConfigContext);
}
function LiveblocksUiConfig({
  overrides,
  components,
  portalContainer,
  preventUnsavedComposerChanges = true,
  emojibaseUrl,
  children
}) {
  const liveblocksUiConfig = useMemo(
    () => ({
      portalContainer,
      preventUnsavedComposerChanges,
      emojibaseUrl
    }),
    [portalContainer, preventUnsavedComposerChanges, emojibaseUrl]
  );
  return /* @__PURE__ */ jsx(LiveblocksUiConfigContext.Provider, {
    value: liveblocksUiConfig,
    children: /* @__PURE__ */ jsx(OverridesProvider, {
      overrides,
      children: /* @__PURE__ */ jsx(ComponentsProvider, {
        components,
        children
      })
    })
  });
}

export { LiveblocksUiConfig, useLiveblocksUiConfig };
//# sourceMappingURL=config.js.map
