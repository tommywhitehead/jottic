'use strict';

var slate = require('slate');

function getCharacterBefore(editor, at, options = {}) {
  const { filterVoids } = options;
  const before = slate.Editor.before(editor, at, {
    unit: "character",
    voids: filterVoids
  });
  if (before) {
    const range = slate.Editor.range(
      editor,
      before,
      slate.Range.isRange(at) ? slate.Range.start(at) : at
    );
    const text = slate.Editor.string(editor, range);
    return {
      range,
      text,
      void: text.length === 0
    };
  }
  return;
}
function getCharacterAfter(editor, at, options = {}) {
  const { filterVoids } = options;
  const after = slate.Editor.after(editor, at, {
    unit: "character",
    voids: filterVoids
  });
  if (after) {
    const range = slate.Editor.range(
      editor,
      after,
      slate.Range.isRange(at) ? slate.Range.end(at) : at
    );
    const text = slate.Editor.string(editor, range);
    return {
      range,
      text,
      void: text.length === 0
    };
  }
  return;
}

exports.getCharacterAfter = getCharacterAfter;
exports.getCharacterBefore = getCharacterBefore;
//# sourceMappingURL=get-character.cjs.map
