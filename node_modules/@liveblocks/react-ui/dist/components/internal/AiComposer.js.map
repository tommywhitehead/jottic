{"version":3,"file":"AiComposer.js","sources":["../../../src/components/internal/AiComposer.tsx"],"sourcesContent":["import {\n  type AiChatMessage,\n  type AiKnowledgeSource,\n  type CopilotId,\n  type MessageId,\n} from \"@liveblocks/core\";\nimport {\n  useSendAiMessage,\n  type UseSendAiMessageOptions,\n} from \"@liveblocks/react\";\nimport {\n  type ComponentProps,\n  type FormEvent,\n  forwardRef,\n  type SyntheticEvent,\n  useCallback,\n} from \"react\";\n\nimport { SendIcon } from \"../../icons/Send\";\nimport { StopIcon } from \"../../icons/Stop\";\nimport {\n  type AiComposerOverrides,\n  type GlobalOverrides,\n  useOverrides,\n} from \"../../overrides\";\nimport * as AiComposerPrimitive from \"../../primitives/AiComposer\";\nimport { useAiComposer } from \"../../primitives/AiComposer/contexts\";\nimport type {\n  AiComposerEditorProps,\n  AiComposerFormProps,\n  AiComposerSubmitMessage,\n} from \"../../primitives/AiComposer/types\";\nimport { cn } from \"../../utils/cn\";\nimport { Button } from \"./Button\";\nimport { ShortcutTooltip, TooltipProvider } from \"./Tooltip\";\n\n/* -------------------------------------------------------------------------------------------------\n * AiComposer\n * -----------------------------------------------------------------------------------------------*/\nexport interface AiComposerProps\n  extends Omit<ComponentProps<\"form\">, \"defaultValue\"> {\n  /**\n   * The composer's initial value.\n   */\n  defaultValue?: string;\n\n  /**\n   * The event handler called when the composer is submitted.\n   */\n  onComposerSubmit?: (\n    message: AiComposerSubmitMessage,\n    event: FormEvent<HTMLFormElement>\n  ) => void;\n\n  /**\n   * The event handler called after the composer is submitted.\n   *\n   * @internal This API will change, and is not considered stable. DO NOT RELY on it.\n   */\n  onComposerSubmitted?: (message: AiChatMessage) => void;\n\n  /**\n   * Whether the composer is disabled.\n   */\n  disabled?: AiComposerFormProps[\"disabled\"];\n\n  /**\n   * Whether to focus the composer on mount.\n   */\n  autoFocus?: AiComposerEditorProps[\"autoFocus\"];\n\n  /**\n   * Override the component's strings.\n   */\n  overrides?: Partial<GlobalOverrides & AiComposerOverrides>;\n\n  /**\n   * The ID of the chat the composer belongs to.\n   */\n  chatId: string;\n\n  /**\n   * The ID of the copilot to use to send the message.\n   */\n  copilotId?: CopilotId;\n\n  /**\n   * @internal\n   */\n  knowledge?: AiKnowledgeSource[];\n\n  /**\n   * @internal\n   */\n  branchId?: MessageId;\n\n  /**\n   * @internal\n   */\n  stream?: boolean;\n}\n\nfunction AiComposerAction({\n  overrides,\n}: {\n  overrides?: AiComposerProps[\"overrides\"];\n}) {\n  const { canAbort } = useAiComposer();\n  const $ = useOverrides(overrides);\n\n  const preventDefault = useCallback((event: SyntheticEvent) => {\n    event.preventDefault();\n  }, []);\n\n  const stopPropagation = useCallback((event: SyntheticEvent) => {\n    event.stopPropagation();\n  }, []);\n\n  return canAbort ? (\n    <ShortcutTooltip content={$.AI_COMPOSER_ABORT}>\n      <AiComposerPrimitive.Abort asChild>\n        <Button\n          onPointerDown={preventDefault}\n          onClick={stopPropagation}\n          className=\"lb-ai-composer-action\"\n          variant=\"secondary\"\n          aria-label={$.AI_COMPOSER_ABORT}\n          icon={<StopIcon />}\n        />\n      </AiComposerPrimitive.Abort>\n    </ShortcutTooltip>\n  ) : (\n    <ShortcutTooltip content={$.AI_COMPOSER_SEND} shortcut=\"Enter\">\n      <AiComposerPrimitive.Submit asChild>\n        <Button\n          onPointerDown={preventDefault}\n          onClick={stopPropagation}\n          className=\"lb-ai-composer-action\"\n          variant=\"primary\"\n          aria-label={$.AI_COMPOSER_SEND}\n          icon={<SendIcon />}\n        />\n      </AiComposerPrimitive.Submit>\n    </ShortcutTooltip>\n  );\n}\n\nexport const AiComposer = forwardRef<HTMLFormElement, AiComposerProps>(\n  (\n    {\n      defaultValue,\n      onComposerSubmit,\n      disabled,\n      autoFocus,\n      overrides,\n      className,\n      chatId,\n      knowledge: localKnowledge,\n      branchId,\n      copilotId,\n      stream = true,\n      onComposerSubmitted,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    const $ = useOverrides(overrides);\n    const sendAiMessage = useSendAiMessage(chatId, {\n      stream,\n      copilotId,\n\n      // TODO: We shouldn't need to pass knowledge from AiChat to AiComposer\n      //       to useSendAiMessage, ideally it would be attached to a chat ID\n      //       behind the scenes inside AiChat.\n      knowledge: localKnowledge,\n    } as UseSendAiMessageOptions);\n\n    const handleComposerSubmit = useCallback(\n      (message: AiComposerSubmitMessage, event: FormEvent<HTMLFormElement>) => {\n        onComposerSubmit?.(message, event);\n\n        if (event.isDefaultPrevented()) return;\n\n        const newMessage = sendAiMessage(message.text);\n\n        onComposerSubmitted?.(newMessage);\n      },\n      [onComposerSubmit, sendAiMessage, onComposerSubmitted]\n    );\n\n    return (\n      <TooltipProvider>\n        <AiComposerPrimitive.Form\n          className={cn(\n            \"lb-root lb-ai-composer lb-ai-composer-form\",\n            className\n          )}\n          dir={$.dir}\n          {...props}\n          disabled={disabled}\n          ref={forwardedRef}\n          onComposerSubmit={handleComposerSubmit}\n          chatId={chatId}\n          branchId={branchId}\n        >\n          <div className=\"lb-ai-composer-editor-container\">\n            <AiComposerPrimitive.Editor\n              autoFocus={autoFocus}\n              className=\"lb-ai-composer-editor\"\n              placeholder={$.AI_COMPOSER_PLACEHOLDER}\n              defaultValue={defaultValue}\n            />\n\n            <div className=\"lb-ai-composer-footer\">\n              <div className=\"lb-ai-composer-editor-actions\">\n                {/* No actions for now but it makes sense to keep the DOM structure */}\n              </div>\n\n              <div className=\"lb-ai-composer-actions\">\n                <AiComposerAction overrides={overrides} />\n              </div>\n            </div>\n          </div>\n        </AiComposerPrimitive.Form>\n      </TooltipProvider>\n    );\n  }\n);\n"],"names":["AiComposerPrimitive.Abort","AiComposerPrimitive.Submit","AiComposerPrimitive.Form","AiComposerPrimitive.Editor"],"mappings":"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"}