import { jsx } from 'react/jsx-runtime';
import { memo, forwardRef } from 'react';
import { useOverrides } from '../../overrides.js';
import { Content as AiMessageContent } from '../../primitives/AiMessage/index.js';
import { cn } from '../../utils/cn.js';
import { Prose } from './Prose.js';

function TextPart({ part, components }) {
  return /* @__PURE__ */ jsx(Prose, {
    content: part.text,
    className: "lb-ai-chat-message-text",
    components
  });
}
const AiChatUserMessage = memo(
  forwardRef(
    ({ message, className, overrides, components, ...props }, forwardedRef) => {
      const $ = useOverrides(overrides);
      return /* @__PURE__ */ jsx("div", {
        ref: forwardedRef,
        className: cn(
          "lb-ai-chat-message lb-ai-chat-user-message",
          className
        ),
        ...props,
        children: message.deletedAt !== void 0 ? /* @__PURE__ */ jsx("div", {
          className: "lb-ai-chat-message-deleted",
          children: $.AI_CHAT_MESSAGE_DELETED
        }) : /* @__PURE__ */ jsx(AiMessageContent, {
          className: "lb-ai-chat-message-content",
          message,
          components: {
            TextPart: (props2) => /* @__PURE__ */ jsx(TextPart, {
              ...props2,
              components
            })
          }
        })
      });
    }
  )
);

export { AiChatUserMessage };
//# sourceMappingURL=AiChatUserMessage.js.map
