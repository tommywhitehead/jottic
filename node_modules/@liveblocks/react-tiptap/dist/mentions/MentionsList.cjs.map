{"version":3,"file":"MentionsList.cjs","sources":["../../src/mentions/MentionsList.tsx"],"sourcesContent":["import {\n  autoUpdate,\n  flip,\n  hide,\n  limitShift,\n  offset,\n  shift,\n  size,\n  useFloating,\n} from \"@floating-ui/react-dom\";\nimport { assertNever, createInboxNotificationId } from \"@liveblocks/core\";\nimport { useRoom } from \"@liveblocks/react\";\nimport {\n  useLayoutEffect,\n  useMentionSuggestions,\n} from \"@liveblocks/react/_private\";\nimport {\n  Avatar,\n  Group,\n  GroupDescription,\n  User,\n  UsersIcon,\n} from \"@liveblocks/react-ui/_private\";\nimport type { HTMLAttributes, MouseEvent } from \"react\";\nimport { forwardRef, useEffect, useImperativeHandle, useState } from \"react\";\n\nimport type { TiptapMentionData } from \"../types\";\n\nexport const SUGGESTIONS_COLLISION_PADDING = 10;\n\nexport interface MentionsListProps extends HTMLAttributes<HTMLDivElement> {\n  query: string;\n  command: (otps: TiptapMentionData) => void;\n  clientRect: () => DOMRect;\n  hide: boolean;\n}\n\nexport type MentionsListHandle = {\n  onKeyDown: ({ event }: { event: KeyboardEvent }) => boolean;\n};\n\nexport const MentionsList = forwardRef<MentionsListHandle, MentionsListProps>(\n  (props, ref) => {\n    const [selectedIndex, setSelectedIndex] = useState(0);\n    const room = useRoom();\n    const suggestions = useMentionSuggestions(room.id, props.query);\n    const { onMouseEnter, onClick } = props;\n    const {\n      refs: { setReference, setFloating },\n      strategy,\n      x,\n      y,\n    } = useFloating({\n      strategy: \"fixed\",\n      placement: \"top-start\",\n      middleware: [\n        flip({ padding: SUGGESTIONS_COLLISION_PADDING, crossAxis: false }),\n        offset(10),\n        hide({ padding: SUGGESTIONS_COLLISION_PADDING }),\n        shift({\n          padding: SUGGESTIONS_COLLISION_PADDING,\n          limiter: limitShift(),\n        }),\n        size({ padding: SUGGESTIONS_COLLISION_PADDING }),\n      ],\n      whileElementsMounted: (...args) => {\n        return autoUpdate(...args, {\n          animationFrame: true,\n        });\n      },\n    });\n\n    useLayoutEffect(() => {\n      setReference({\n        getBoundingClientRect: props.clientRect,\n      });\n    }, [setReference, props.clientRect]);\n\n    const selectItem = (index: number) => {\n      const mention = (suggestions ?? [])[index];\n\n      if (!mention) {\n        return;\n      }\n\n      const notificationId = createInboxNotificationId();\n\n      switch (mention.kind) {\n        case \"user\":\n          props.command({\n            kind: \"user\",\n            id: mention.id,\n            notificationId,\n          });\n          break;\n\n        case \"group\":\n          props.command({\n            kind: \"group\",\n            id: mention.id,\n            userIds: mention.userIds,\n            notificationId,\n          });\n          break;\n\n        default:\n          return assertNever(mention, \"Unhandled mention kind\");\n      }\n    };\n\n    const upHandler = () => {\n      setSelectedIndex(\n        (selectedIndex + (suggestions?.length ?? 0) - 1) %\n          (suggestions?.length ?? 0)\n      );\n    };\n\n    const downHandler = () => {\n      setSelectedIndex((selectedIndex + 1) % (suggestions?.length ?? 0));\n    };\n\n    const enterHandler = () => {\n      selectItem(selectedIndex);\n    };\n\n    useEffect(() => setSelectedIndex(0), [suggestions]);\n\n    useImperativeHandle(ref, () => ({\n      onKeyDown: ({ event }: { event: KeyboardEvent }) => {\n        if (event.key === \"ArrowUp\") {\n          upHandler();\n          return true;\n        }\n\n        if (event.key === \"ArrowDown\") {\n          downHandler();\n          return true;\n        }\n\n        if (event.key === \"Enter\") {\n          enterHandler();\n          return true;\n        }\n\n        return false;\n      },\n    }));\n\n    const handleClick =\n      (index: number) => (event: MouseEvent<HTMLDivElement>) => {\n        onClick?.(event);\n\n        if (event.isDefaultPrevented()) return;\n        selectItem(index);\n      };\n    const handleMouseEnter =\n      (index: number) => (event: MouseEvent<HTMLDivElement>) => {\n        onMouseEnter?.(event);\n\n        if (event.isDefaultPrevented()) return;\n\n        setSelectedIndex(index);\n      };\n\n    if (suggestions === undefined || suggestions.length === 0) {\n      return null;\n    }\n\n    return (\n      <div\n        className=\"lb-root lb-portal lb-elevation lb-tiptap-suggestions lb-tiptap-mention-suggestions\"\n        ref={setFloating}\n        style={{\n          position: strategy,\n          top: 0,\n          left: 0,\n          transform: `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`,\n          minWidth: \"max-content\",\n          display: props.hide ? \"none\" : \"block\",\n        }}\n      >\n        <div className=\"lb-tiptap-suggestions-list lb-tiptap-mention-suggestions-list\">\n          {suggestions.map((mention, index) => {\n            return (\n              <div\n                className=\"lb-tiptap-suggestions-list-item lb-tiptap-mention-suggestion\"\n                key={index}\n                role=\"option\"\n                data-highlighted={index === selectedIndex || undefined}\n                onMouseEnter={handleMouseEnter(index)}\n                onClick={handleClick(index)}\n              >\n                {mention.kind === \"user\" ? (\n                  <>\n                    <Avatar\n                      userId={mention.id}\n                      className=\"lb-tiptap-mention-suggestion-avatar\"\n                    />\n                    <User\n                      userId={mention.id}\n                      className=\"lb-tiptap-mention-suggestion-user\"\n                    />\n                  </>\n                ) : mention.kind === \"group\" ? (\n                  <>\n                    <Avatar\n                      groupId={mention.id}\n                      className=\"lb-tiptap-mention-suggestion-avatar\"\n                      icon={<UsersIcon />}\n                    />\n                    <Group\n                      groupId={mention.id}\n                      className=\"lb-tiptap-mention-suggestion-group\"\n                    >\n                      <GroupDescription\n                        groupId={mention.id}\n                        className=\"lb-tiptap-mention-suggestion-group-description\"\n                      />\n                    </Group>\n                  </>\n                ) : (\n                  assertNever(mention, \"Unhandled mention kind\")\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n);\n"],"names":["forwardRef","useState","useRoom","useMentionSuggestions","useFloating","flip","offset","hide","shift","limitShift","size","autoUpdate","useLayoutEffect","createInboxNotificationId","assertNever","useEffect","useImperativeHandle","jsx","jsxs","Fragment","Avatar","User","UsersIcon","Group","GroupDescription"],"mappings":"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"}