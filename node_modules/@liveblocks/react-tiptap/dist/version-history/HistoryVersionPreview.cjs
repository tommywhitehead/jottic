'use strict';

var jsxRuntime = require('react/jsx-runtime');
var react$1 = require('@liveblocks/react');
var reactUi = require('@liveblocks/react-ui');
var _private = require('@liveblocks/react-ui/_private');
var react$2 = require('@tiptap/react');
var react = require('react');
var yProsemirror = require('y-prosemirror');
var yjs = require('yjs');

const AUTHORS_TRUNCATE = 3;
const HistoryVersionPreview = react.forwardRef(
  ({ version, editor: parentEditor, onVersionRestore, className, ...props }, forwardedRef) => {
    const $ = reactUi.useOverrides();
    const { isLoading, data, error } = react$1.useHistoryVersionData(version.id);
    const previewEditor = react$2.useEditor({
      editable: false,
      extensions: parentEditor.extensionManager.extensions.filter(
        (e) => e.type !== "extension"
      )
    });
    react.useEffect(() => {
      if (data && previewEditor) {
        const doc = new yjs.Doc();
        yjs.applyUpdate(doc, data);
        const root = doc.getXmlFragment("default");
        const node = yProsemirror.yXmlFragmentToProseMirrorRootNode(
          root,
          parentEditor.schema
        );
        previewEditor.commands.setContent(node.toJSON());
      }
    }, [data, previewEditor, parentEditor]);
    const restore = react.useCallback(() => {
      parentEditor.commands.setContent(previewEditor?.getJSON() ?? "");
      onVersionRestore?.(version);
    }, [onVersionRestore, parentEditor, previewEditor, version]);
    return /* @__PURE__ */ jsxRuntime.jsxs("div", {
      ...props,
      className: _private.cn(
        "lb-root lb-history-version-preview lb-tiptap-version-preview",
        className
      ),
      ref: forwardedRef,
      children: [
        isLoading ? /* @__PURE__ */ jsxRuntime.jsx("div", {
          className: "lb-loading lb-history-version-preview-loading",
          children: /* @__PURE__ */ jsxRuntime.jsx(_private.SpinnerIcon, {})
        }) : error ? /* @__PURE__ */ jsxRuntime.jsx("div", {
          className: "lb-error lb-history-version-preview-error",
          children: $.HISTORY_VERSION_PREVIEW_ERROR(error)
        }) : /* @__PURE__ */ jsxRuntime.jsx("div", {
          className: "lb-history-version-preview-content lb-tiptap-editor-container lb-tiptap-version-preview-editor-container",
          children: /* @__PURE__ */ jsxRuntime.jsx(react$2.EditorContent, {
            editor: previewEditor
          })
        }),
        /* @__PURE__ */ jsxRuntime.jsxs("div", {
          className: "lb-history-version-preview-footer",
          children: [
            /* @__PURE__ */ jsxRuntime.jsx("span", {
              className: "lb-history-version-preview-authors",
              children: $.HISTORY_VERSION_PREVIEW_AUTHORS_LIST(
                /* @__PURE__ */ jsxRuntime.jsx(_private.List, {
                  values: version.authors.map((author) => /* @__PURE__ */ jsxRuntime.jsx(_private.User, {
                    userId: author.id,
                    replaceSelf: true
                  }, author.id)),
                  formatRemaining: $.LIST_REMAINING_USERS,
                  truncate: AUTHORS_TRUNCATE,
                  locale: $.locale
                })
              )
            }),
            /* @__PURE__ */ jsxRuntime.jsx("div", {
              className: "lb-history-version-preview-actions",
              children: /* @__PURE__ */ jsxRuntime.jsx(_private.Button, {
                onClick: restore,
                disabled: !data,
                variant: "primary",
                size: "large",
                className: "lb-history-version-preview-action",
                icon: /* @__PURE__ */ jsxRuntime.jsx(_private.RestoreIcon, {}),
                children: $.HISTORY_VERSION_PREVIEW_RESTORE
              })
            })
          ]
        })
      ]
    });
  }
);

exports.HistoryVersionPreview = HistoryVersionPreview;
//# sourceMappingURL=HistoryVersionPreview.cjs.map
