{"version":3,"file":"HistoryVersionPreview.cjs","sources":["../../src/version-history/HistoryVersionPreview.tsx"],"sourcesContent":["import type { HistoryVersion } from \"@liveblocks/core\";\nimport { useHistoryVersionData } from \"@liveblocks/react\";\nimport { useOverrides } from \"@liveblocks/react-ui\";\nimport {\n  Button,\n  cn,\n  List,\n  RestoreIcon,\n  SpinnerIcon,\n  User,\n} from \"@liveblocks/react-ui/_private\";\nimport type { Content, Editor } from \"@tiptap/react\";\nimport { EditorContent, useEditor } from \"@tiptap/react\";\nimport type { ComponentPropsWithoutRef } from \"react\";\nimport { forwardRef, useCallback, useEffect } from \"react\";\nimport { yXmlFragmentToProseMirrorRootNode } from \"y-prosemirror\";\nimport { applyUpdate, Doc } from \"yjs\";\n\nconst AUTHORS_TRUNCATE = 3;\n\nexport interface HistoryVersionPreviewProps\n  extends ComponentPropsWithoutRef<\"div\"> {\n  version: HistoryVersion;\n  editor: Editor;\n  onVersionRestore?: (version: HistoryVersion) => void;\n}\n\n/**\n * Displays a specific version of the current TipTap document.\n *\n * @example\n * <HistoryVersionPreview version={version} />\n */\nexport const HistoryVersionPreview = forwardRef<\n  HTMLDivElement,\n  HistoryVersionPreviewProps\n>(\n  (\n    { version, editor: parentEditor, onVersionRestore, className, ...props },\n    forwardedRef\n  ) => {\n    const $ = useOverrides();\n    const { isLoading, data, error } = useHistoryVersionData(version.id);\n\n    const previewEditor = useEditor({\n      // ignore extensions, only get marks/nodes\n      editable: false,\n      extensions: parentEditor.extensionManager.extensions.filter(\n        (e) => e.type !== \"extension\"\n      ),\n    });\n    useEffect(() => {\n      if (data && previewEditor) {\n        const doc = new Doc();\n        applyUpdate(doc, data);\n        const root = doc.getXmlFragment(\"default\"); // TODO: lookup field\n        const node = yXmlFragmentToProseMirrorRootNode(\n          root,\n          parentEditor.schema\n        );\n        previewEditor.commands.setContent(node.toJSON() as Content);\n      }\n    }, [data, previewEditor, parentEditor]);\n    const restore = useCallback(() => {\n      parentEditor.commands.setContent(previewEditor?.getJSON() ?? \"\");\n      onVersionRestore?.(version);\n    }, [onVersionRestore, parentEditor, previewEditor, version]);\n\n    return (\n      <div\n        {...props}\n        className={cn(\n          \"lb-root lb-history-version-preview lb-tiptap-version-preview\",\n          className\n        )}\n        ref={forwardedRef}\n      >\n        {isLoading ? (\n          <div className=\"lb-loading lb-history-version-preview-loading\">\n            <SpinnerIcon />\n          </div>\n        ) : error ? (\n          <div className=\"lb-error lb-history-version-preview-error\">\n            {$.HISTORY_VERSION_PREVIEW_ERROR(error)}\n          </div>\n        ) : (\n          <div className=\"lb-history-version-preview-content lb-tiptap-editor-container lb-tiptap-version-preview-editor-container\">\n            <EditorContent editor={previewEditor} />\n          </div>\n        )}\n        <div className=\"lb-history-version-preview-footer\">\n          <span className=\"lb-history-version-preview-authors\">\n            {$.HISTORY_VERSION_PREVIEW_AUTHORS_LIST(\n              <List\n                values={version.authors.map((author) => (\n                  <User key={author.id} userId={author.id} replaceSelf />\n                ))}\n                formatRemaining={$.LIST_REMAINING_USERS}\n                truncate={AUTHORS_TRUNCATE}\n                locale={$.locale}\n              />\n            )}\n          </span>\n          <div className=\"lb-history-version-preview-actions\">\n            <Button\n              onClick={restore}\n              disabled={!data}\n              variant=\"primary\"\n              size=\"large\"\n              className=\"lb-history-version-preview-action\"\n              icon={<RestoreIcon />}\n            >\n              {$.HISTORY_VERSION_PREVIEW_RESTORE}\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n"],"names":["forwardRef","useOverrides","useHistoryVersionData","useEditor","useEffect","Doc","applyUpdate","yXmlFragmentToProseMirrorRootNode","useCallback","jsxs","cn","jsx","SpinnerIcon","EditorContent","List","User","Button","RestoreIcon"],"mappings":"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"}